{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { createToken } from 'src/app/shared/helpers';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./search-form.service\";\nexport let LoginService = /*#__PURE__*/(() => {\n  class LoginService {\n    constructor(router, searchFormService) {\n      this.router = router;\n      this.searchFormService = searchFormService;\n      this.loginState = {\n        isLoggedIn: this.initLoggedValue(),\n        login: '',\n        token: ''\n      };\n      this.loginState$$ = new BehaviorSubject(JSON.parse(`${localStorage.getItem('loginState')}`));\n      this.password = '';\n      this.isLoggedBehavSubject = new BehaviorSubject(this.loginState.isLoggedIn);\n      this.currentIsLogged = this.isLoggedBehavSubject.asObservable();\n      this.loginState$ = this.loginState$$.asObservable();\n    }\n\n    changeLoginState(loginState) {\n      this.loginState$$.next(loginState);\n    }\n\n    initLoggedValue() {\n      if (localStorage.getItem('loginState') === null) {\n        return false;\n      }\n\n      return JSON.parse(`${localStorage.getItem('loginState')}`).isLoggedIn;\n    }\n\n    getLoginState() {\n      return JSON.parse(`${localStorage.getItem('loginState')}`);\n    }\n\n    setLoginState(login, isLoggedIn) {\n      this.loginState.isLoggedIn = isLoggedIn;\n      this.loginState.login = login;\n      this.loginState.token = createToken();\n    }\n\n    setPassword(password) {\n      this.password = password;\n    }\n\n    onSubmitLoginForm(login) {\n      this.setLoginState(login, true);\n      localStorage.setItem('loginState', JSON.stringify(this.loginState));\n      this.changeLoginState(this.loginState);\n      this.changeCurrentIsLogged(this.loginState.isLoggedIn);\n      this.router.navigateByUrl('/search');\n    }\n\n    changeCurrentIsLogged(value) {\n      this.isLoggedBehavSubject.next(value);\n    }\n\n    onLogoutClick() {\n      this.setLoginState('', false);\n      this.changeCurrentIsLogged(this.loginState.isLoggedIn);\n      this.searchResultItems = [];\n      this.changeLoginState(this.loginState);\n      this.searchFormService.changeCurrentSearchValue('');\n      localStorage.clear();\n      sessionStorage.clear();\n      return this.router.navigate(['login']);\n    }\n\n  }\n\n  LoginService.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.SearchFormService));\n  };\n\n  LoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n  return LoginService;\n})();","map":null,"metadata":{},"sourceType":"module"}